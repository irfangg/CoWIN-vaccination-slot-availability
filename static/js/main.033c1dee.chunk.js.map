{"version":3,"sources":["logo.svg","components/Dashboard.jsx","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","useState","states","setState","districts","setDistricts","setSelectedState","stateName","setStateName","districtName","setDistrictName","pincodes","setPincodes","centers","setCenters","center","setCenter","useEffect","axios","get","then","response","data","onSelectState","id","state","find","state_id","state_name","onSelectDist","district","dist","district_id","district_name","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","console","log","map","c","pincode","address","center_id","onSelectPin","CustomMenu","React","forwardRef","ref","children","style","className","labeledBy","value","setValue","aria-labelledby","FormControl","autoFocus","placeholder","onChange","e","target","Children","toArray","filter","child","props","toLowerCase","indexOf","Container","fluid","Row","Col","xl","lg","md","sm","xs","length","Dropdown","as","ButtonGroup","Toggle","Menu","key","Item","eventKey","onSelect","p","Object","keys","block_name","fee_type","name","Table","responsive","striped","bordered","hover","variant","sessions","session","date","available_capacity","available_capacity_dose1","available_capacity_dose2","min_age_limit","vaccine","slots","s","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.033c1dee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Col, DropdownButton, ButtonGroup, Row, Dropdown, Table, Container, FormControl} from 'react-bootstrap';\r\n\r\nconst Dashboard =  () =>{\r\n    const [states, setState] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    const [selectedState, setSelectedState] = useState('Select state');\r\n    const [stateName, setStateName] = useState('Select state');\r\n    const [districtName, setDistrictName] = useState('Select district');\r\n    const [pincodes, setPincodes] = useState([]);\r\n    const [centers, setCenters] = useState([]);\r\n    const [center, setCenter] = useState({});\r\n    useEffect(()=>{\r\n        axios.get('//cdn-api.co-vin.in/api/v2/admin/location/states')\r\n        .then(response => setState(response.data.states));\r\n    },[]);\r\n    const getDate = () => {\r\n        let today = new Date();\r\n        const dd = String(today.getDate()).padStart(2, '0');\r\n        const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        today = `${dd}-${mm}-${yyyy}`;\r\n        return today;\r\n    }\r\n    const onSelectState = (id) => {\r\n        const state = states.find(state => state.state_id == id);\r\n        setSelectedState(state);\r\n        setStateName(state.state_name || 'Try selecting different')\r\n        axios.get(`https://cdn-api.co-vin.in/api/v2/admin/location/districts/${state.state_id}`)\r\n        .then(response=>setDistricts(response.data.districts))\r\n    }\r\n    const onSelectDist = (id) => {\r\n        const district = districts.find(dist => dist.district_id == id);\r\n        setDistrictName(district.district_name || 'Try different')\r\n        axios.get(`https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=${district.district_id}&date=${getDate()}`)\r\n        .then(response=>{\r\n            setCenters(response.data.centers);\r\n            console.log(response.data.centers, response.data.centers.map(c => `${c.pincode}-${c.address}`))\r\n            return setPincodes(response.data.centers.map(c => {\r\n                const {pincode, address, center_id} = c;\r\n                return {pincode, address, center_id};\r\n            }\r\n            ));\r\n        })\r\n    }\r\n    const onSelectPin = (id) => {\r\n        const center = centers.find(c => c.center_id == id);\r\n        setCenter(center)\r\n    }\r\n    const CustomMenu = React.forwardRef(\r\n        ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n          const [value, setValue] = useState('');\r\n          return (\r\n            <div\r\n              ref={ref}\r\n              style={style}\r\n              className={className}\r\n              aria-labelledby={labeledBy}\r\n            >\r\n              <FormControl\r\n                autoFocus\r\n                className=\"mx-3 my-2 w-auto\"\r\n                placeholder=\"Type to filter...\"\r\n                onChange={(e) => setValue(e.target.value)}\r\n                value={value}\r\n              />\r\n              <ul className=\"list-unstyled\">\r\n                {React.Children.toArray(children).filter(\r\n                  (child) =>\r\n                    !value || child.props.children.toLowerCase().indexOf(value) !== -1, //child.props.children.toLowerCase().includes(value) || \r\n                )}\r\n              </ul>\r\n            </div>\r\n          );\r\n        },\r\n      );\r\n    return(\r\n        <Container fluid>\r\n        <Row className='mt-2'>Dashboard</Row>\r\n        <Row className='mt-2 mb-2'>\r\n            <Col xl={4} lg={4} md={4} sm={12} xs={12} className='mb-2'>\r\n            {states.length ? \r\n                <Dropdown as={ButtonGroup}>\r\n                    <Dropdown.Toggle id=\"dropdown-custom-1\">{stateName}</Dropdown.Toggle>\r\n                    <Dropdown.Menu as={CustomMenu}>\r\n                        {states.map((state, key)=>{\r\n                        return <Dropdown.Item eventKey={state.state_id} key={state.state_id} onSelect={onSelectState}>{state.state_name}</Dropdown.Item>\r\n                        })}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            : null}\r\n            </Col>\r\n            <Col xl={4} lg={4} md={4} sm={12} xs={12} className='mb-2'>\r\n            {districts.length ? \r\n                <Dropdown as={ButtonGroup}>\r\n                    <Dropdown.Toggle id=\"dropdown-custom-1\">{districtName}</Dropdown.Toggle>\r\n                    <Dropdown.Menu as={CustomMenu}>\r\n                        {districts.map((dist, key)=>{\r\n                        return <Dropdown.Item eventKey={dist.district_id} key={dist.district_id} onSelect={onSelectDist}>{dist.district_name}</Dropdown.Item>\r\n                        })}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            : null}  \r\n            </Col>\r\n            <Col xl={4} lg={4} md={4} sm={12} xs={12}>\r\n                {pincodes.length ? \r\n                <Dropdown as={ButtonGroup}>\r\n                    <Dropdown.Toggle id=\"dropdown-custom-1\">Pincode</Dropdown.Toggle>\r\n                    <Dropdown.Menu as={CustomMenu}>\r\n                        {pincodes.map((p, key)=>{\r\n                            return <Dropdown.Item eventKey={p.center_id} key={key} onSelect={onSelectPin}>{`${p.pincode}-${p.address}`}</Dropdown.Item>\r\n                        })}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n                : null}\r\n            </Col>\r\n      </Row>\r\n      {Object.keys(center).length !== 0 ?\r\n      <>\r\n    <Row className='mt-2'>\r\n        <Col xl={3} lg={3} md={6} sm={6} xs={12}>\r\n            Address: {center.address}\r\n        </Col>\r\n        <Col xl={3} lg={3} md={6} sm={6} xs={12}>\r\n            Block name: {center.block_name}\r\n        </Col>\r\n        <Col xl={3} lg={3} md={6} sm={6} xs={12}>\r\n            vaccine fee: {center.fee_type}\r\n        </Col>\r\n        <Col xl={3} lg={3} md={6} sm={6} xs={12}>Center name: {center.name}</Col>\r\n    </Row> \r\n    <Row className='mt-2'>\r\n        <Col xs={12}>\r\n        <Table responsive striped bordered hover variant=\"dark\">\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Available capacity</th>\r\n                <th>Min age limit</th>\r\n                <th>vaccine</th>\r\n                <th>slots</th>\r\n                <th>Available dose1</th>\r\n                <th>Available dose2</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {center.sessions.map((session)=>{\r\n                const {date, available_capacity, available_capacity_dose1, available_capacity_dose2,min_age_limit,\r\n                    vaccine, slots,  } = session;\r\n                return (\r\n                <tr>\r\n                    <td>{date}</td>\r\n                    <td>{available_capacity}</td>\r\n                    <td>{min_age_limit}</td>\r\n                    <td>{vaccine}</td>\r\n                    <td>{slots.map(s => <div>{s}</div>)}</td>\r\n                    <td>{available_capacity_dose1}</td>\r\n                    <td>{available_capacity_dose2}</td>\r\n                </tr>\r\n                )\r\n            })}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n    </Row>\r\n    </>\r\n    : null}\r\n      </Container>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import logo from './logo.svg';\nimport './App.css';\nimport {Col, Container, Row, Dropdown} from 'react-bootstrap';\nimport Dashboard from './components/Dashboard'\n\nfunction App() {\n  return (\n    <Container fluid className=\"App\">\n          <Dashboard/>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}