{"version":3,"sources":["logo.svg","components/DisplayMapFC.js","components/Dashboard.jsx","App.js","reportWebVitals.js","index.js"],"names":["DisplayMapFC","mapRef","useRef","useState","setLocation","API_KEY","getLocationPostalCode","lat","lng","H","map","platform","ui","axios","get","then","res","postalCode","data","items","i","address","console","log","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","centers","group","Group","forEach","center","addressString","name","block_name","district_name","state_name","join","locateAddress","geocodingParameters","searchText","jsonattributes","getGeocodingService","geocode","result","locations","response","view","position","length","location","displayPosition","latitude","longitude","marker","Marker","label","addObject","setCenter","getBounds","getCenter","addLocationsToMap","onSuccessAddress","onErrorAdress","error","alert","options","enableHighAccuracy","timeout","maximumAge","success","pos","crd","coords","accuracy","addMarkersToMap","errors","err","warn","code","message","parisMarker","useLayoutEffect","current","window","service","Platform","apikey","defaultLayers","createDefaultLayers","hMap","Map","vector","normal","zoom","pixelRatio","devicePixelRatio","mapevents","Behavior","MapEvents","UI","createDefault","mapSettings","getControl","scalebar","setAlignment","navigator","geolocation","permissions","query","state","getCurrentPosition","onchange","addEventListener","evt","coord","screenToGeo","currentPointer","viewportX","viewportY","Math","abs","toFixed","removeObjects","getObjects","setUpClickListener","dispose","className","ref","style","height","Dashboard","states","setState","districts","setDistricts","setSelectedState","stateName","setStateName","districtName","setDistrictName","pincodes","setPincodes","setCenters","useEffect","pincode","postalCodes","p","adminName3","placeName","onSelectState","id","find","state_id","onSelectDist","district","dist","district_id","c","center_id","onSelectPin","CustomMenu","React","forwardRef","children","labeledBy","value","setValue","aria-labelledby","FormControl","autoFocus","placeholder","onChange","e","target","Children","toArray","filter","child","props","toLowerCase","indexOf","Container","fluid","Row","Col","xl","lg","md","sm","xs","Dropdown","as","ButtonGroup","Toggle","Menu","key","Item","eventKey","onSelect","Object","keys","fee_type","Table","responsive","striped","bordered","hover","variant","sessions","session","date","available_capacity","available_capacity_dose1","available_capacity_dose2","min_age_limit","vaccine","slots","s","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d445f39.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useLayoutEffect, useEffect, useRef} from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const DisplayMapFC = () => {\r\n  // Create a reference to the HTML element we want to put the map on\r\n  const mapRef = useRef(null);\r\n  const [location, setLocation] = useState({});\r\n  const [tappedLocation, setTappedLocation] = useState(null);\r\n  const API_KEY = 'D7TYtj-F9aiomDdSfrZ7w6flNj55_JSEQg3F9VhX4Hc';\r\n  let bubble;\r\n  const getDate = () => {\r\n    let today = new Date();\r\n    const dd = String(today.getDate()).padStart(2, '0');\r\n    const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    const yyyy = today.getFullYear();\r\n    today = `${dd}-${mm}-${yyyy}`;\r\n    return today;\r\n}\r\n  const getLocationPostalCode = (lat,lng, H, map, platform, ui) => {\r\n      axios.get(`https://revgeocode.search.hereapi.com/v1/revgeocode?at=${lat}%2C${lng}&lang=en-US&apiKey=${API_KEY}`)\r\n      .then(res=>{\r\n        const postalCode = res.data.items.map(i=> i.address.postalCode)[0];\r\n        console.log('postalCode ',postalCode);\r\n        //locateAddress(H, map, platform, 'india, shimoga, thirthahalli, kudumallige, 577232')\r\n        postalCode && axios.get(`https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByPin?pincode=${postalCode}&date=${getDate()}`)\r\n        .then(res => {\r\n          const centers = res.data?.centers;\r\n          console.log(res.data.centers)\r\n          let group = new H.map.Group()\r\n          centers.forEach(center => {\r\n            const {name, address, block_name, district_name, state_name} = center;\r\n            const addressString = [name, address, block_name, district_name, state_name].join(',');\r\n           console.log(addressString)\r\n            platform && locateAddress(H, map, platform, ui, addressString, group)\r\n          })\r\n        })\r\n      })\r\n  }\r\n\r\n  const locateAddress = (H, map, platform,ui, address, group)=> {\r\n    let geocoder = platform.getGeocodingService(),\r\n      geocodingParameters = {\r\n        searchText: address,\r\n        jsonattributes : 1\r\n      };\r\n  \r\n    geocoder.geocode(\r\n      geocodingParameters,\r\n      (result)=>onSuccessAddress(H, map,ui, result, group),\r\n      onErrorAdress\r\n    );\r\n  }\r\n\r\n  /**\r\n   * This function will be called once the Geocoder REST API provides a response\r\n   * @param  {Object} result          A JSONP object representing the  location(s) found.\r\n   *\r\n   * see: http://developer.here.com/rest-apis/documentation/geocoder/topics/resource-type-response-geocode.html\r\n   */\r\n   function onSuccessAddress(H, map,ui, result, group) {\r\n    var locations = result.response.view[0].result;\r\n    console.log('locations ',locations)\r\n   /*\r\n    * The styling of the geocoding response on the map is entirely under the developer's control.\r\n    * A representitive styling can be found the full JS + HTML code of this example\r\n    * in the functions below:\r\n    */\r\n    addLocationsToMap(H, map, ui,locations, group);\r\n    //addLocationsToPanel(locations);\r\n    // ... etc.\r\n  }\r\n  \r\n  /**\r\n   * This function will be called if a communication error occurs during the JSON-P request\r\n   * @param  {Object} error  The error message received.\r\n   */\r\n  function onErrorAdress(error) {\r\n    alert('Ooops!');\r\n  }\r\n\r\n  /**\r\n   * Creates a series of H.map.Markers for each location found, and adds it to the map.\r\n   * @param {Object[]} locations An array of locations as received from the\r\n   *                             H.service.GeocodingService\r\n   */\r\n   function addLocationsToMap(H, map,ui, locations, group){\r\n    let position,i;\r\n\r\n    // Add a marker for each location found\r\n    for (i = 0;  i < locations.length; i += 1) {\r\n      position = {\r\n        lat: locations[i].location.displayPosition.latitude,\r\n        lng: locations[i].location.displayPosition.longitude\r\n      };\r\n      const marker = new H.map.Marker(position);\r\n      marker.label = locations[i].location.address.label;\r\n      group.addObject(marker);\r\n      // addMarkerToGroup(group,H, {lat: position.lat, lng: position.lng},\r\n      //   `<div>${locations[i].location.address.label}</div>`);\r\n    }\r\n  \r\n    // // add 'tap' event listener, that opens info bubble, to the group\r\n    // group.addEventListener('tap', function (evt) {\r\n    //   // event target is the marker itself, group is a parent event target\r\n    //   // for all objects that it contains\r\n    //   var bubble = new H.ui.InfoBubble(evt.target.getGeometry(), {\r\n    //     // read custom data\r\n    //     content: evt.target.getData()\r\n    //   });\r\n    //   // show info bubble\r\n    //   ui.addBubble(bubble);\r\n    // }, false);\r\n  \r\n    // Add the locations group to the map\r\n    map.addObject(group);\r\n    map.setCenter(group.getBounds().getCenter());\r\n  }\r\n\r\n  function addMarkerToGroup(group,H,coordinate, html) {\r\n    var marker = new H.map.Marker(coordinate);\r\n    // add custom data to the marker\r\n    marker.setData(html);\r\n    group.addObject(marker);\r\n  }\r\n\r\n  /**\r\n   * Opens/Closes a infobubble\r\n   * @param  {H.geo.Point} position     The location on the map.\r\n   * @param  {String} text              The contents of the infobubble.\r\n   */\r\n   function openBubble(position, text, H){\r\n    if(!bubble){\r\n       bubble =  new H.ui.InfoBubble(\r\n         position,\r\n         {content: text});\r\n       H.getControl().addBubble(bubble);\r\n     } else {\r\n       bubble.setPosition(position);\r\n       bubble.setContent(text);\r\n       bubble.open();\r\n     }\r\n   }\r\n\r\n  const options = {\r\n    enableHighAccuracy: true,\r\n    timeout: 5000,\r\n    maximumAge: 0,\r\n  };\r\n  const success = (pos,map,H)=> {\r\n      const crd = pos.coords;\r\n      setLocation(crd);\r\n      console.log(\"Your current position is:\");\r\n      console.log(`Latitude : ${crd.latitude}`);\r\n      console.log(`Longitude: ${crd.longitude}`);\r\n      console.log(`More or less ${crd.accuracy} meters.`);\r\n      addMarkersToMap(map,H,crd.latitude,crd.longitude)\r\n  }\r\n  \r\n  const errors = (err) => {\r\n      console.warn(`ERROR(${err.code}): ${err.message}`);\r\n  }\r\n  const addMarkersToMap = (map,H,lat,lng, platform, ui)=> {\r\n      var parisMarker = new H.map.Marker({lat, lng});\r\n      map.addObject(parisMarker);\r\n      getLocationPostalCode(lat,lng, H, map, platform, ui);\r\n  }\r\n  const setUpClickListener = (map,H, platform, ui)=> {\r\n      // Attach an event listener to map display\r\n      // obtain the coordinates and display in an alert box.\r\n      map.addEventListener('tap', function (evt) {\r\n        var coord = map.screenToGeo(evt.currentPointer.viewportX,\r\n                evt.currentPointer.viewportY);\r\n        console.log('Clicked at ' + Math.abs(coord.lat.toFixed(4)) +\r\n            ((coord.lat > 0) ? 'N' : 'S') +\r\n            ' ' + Math.abs(coord.lng.toFixed(4)) +\r\n              ((coord.lng > 0) ? 'E' : 'W'));\r\n          map.removeObjects(map.getObjects())\r\n          addMarkersToMap(map,H, Math.abs(coord.lat.toFixed(4)), Math.abs(coord.lng.toFixed(4)), platform, ui);\r\n      });\r\n    }\r\n  /**\r\n   * Create the map instance\r\n   * While `useEffect` could also be used here, `useLayoutEffect` will render\r\n   * the map sooner\r\n   */\r\n  useLayoutEffect(() => {\r\n    // `mapRef.current` will be `undefined` when this hook first runs; edge case that\r\n    if (!mapRef.current) return;\r\n    const H = window.H;\r\n    const platform = new H.service.Platform({\r\n        apikey: API_KEY\r\n    });\r\n    const defaultLayers = platform.createDefaultLayers();\r\n    const hMap = new H.Map(mapRef.current, defaultLayers.vector.normal.map, {\r\n      center: { lat: 25, lng: 78 },\r\n      zoom: 4.5,\r\n      pixelRatio: window.devicePixelRatio || 1\r\n    });\r\n    //mapRef.setBaseLayer(defaultLayers.satellite.map);\r\n    const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(hMap));\r\n\r\n    const ui = H.ui.UI.createDefault(hMap, defaultLayers, 'de-DE');\r\n    var mapSettings = ui.getControl('mapsettings');\r\n    var zoom = ui.getControl('zoom');\r\n    var scalebar = ui.getControl('scalebar');\r\n    \r\n    mapSettings.setAlignment('top-left');\r\n    zoom.setAlignment('top-left');\r\n    scalebar.setAlignment('top-left');\r\n\r\n    if (navigator.geolocation) {\r\n        navigator.permissions\r\n          .query({ name: \"geolocation\" })\r\n          .then(function (result) {\r\n            if (result.state === \"granted\") {\r\n              console.log(result.state);\r\n              //If granted then you can directly call your function here\r\n              navigator.geolocation.getCurrentPosition((pos)=>success(pos,hMap,H), errors, options);\r\n            } else if (result.state === \"prompt\") {\r\n              navigator.geolocation.getCurrentPosition((pos)=>success(pos,hMap,H), errors, options);\r\n            } else if (result.state === \"denied\") {\r\n              //If denied then you have to show instructions to enable location\r\n            }\r\n            result.onchange = function () {\r\n              console.log(result.state);\r\n            };\r\n          });\r\n    } else {\r\n        alert(\"Sorry Not available!\");\r\n    }\r\n    setUpClickListener(hMap,H, platform, ui);\r\n    //restrictMap(hMap,H);\r\n    // This will act as a cleanup to run once this hook runs again.\r\n    // This includes when the component un-mounts\r\n    return () => {\r\n      hMap.dispose();\r\n    };\r\n  }, [mapRef]); // This will run this hook every time this ref is updated\r\n\r\n  return <div className=\"map\" ref={mapRef} style={{ height: \"600px\" }} />;\r\n};","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Col, DropdownButton, ButtonGroup, Row, Dropdown, Table, Container, FormControl} from 'react-bootstrap';\r\nimport {DisplayMapFC} from './DisplayMapFC';\r\n\r\nconst Dashboard =  () =>{\r\n    const [states, setState] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    const [selectedState, setSelectedState] = useState('Select state');\r\n    const [stateName, setStateName] = useState('Select state');\r\n    const [districtName, setDistrictName] = useState('Select district');\r\n    const [pincodes, setPincodes] = useState([]);\r\n    const [centers, setCenters] = useState([]);\r\n    const [center, setCenter] = useState({});\r\n    \r\n    const measure = (lat1, lon1, lat2, lon2)=>{  // generally used geo measurement function\r\n        var R = 6378.137; // Radius of earth in KM\r\n        var dLat = lat2 * Math.PI / 180 - lat1 * Math.PI / 180;\r\n        var dLon = lon2 * Math.PI / 180 - lon1 * Math.PI / 180;\r\n        var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *\r\n        Math.sin(dLon/2) * Math.sin(dLon/2);\r\n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n        var d = R * c;\r\n        return d * 1000; // meters\r\n    }\r\n\r\n    useEffect(()=>{\r\n        axios.get('https://cdn-api.co-vin.in/api/v2/admin/location/states')\r\n        .then(response => setState(response.data.states));\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        console.log(center,'changed')\r\n        axios.get(`https://secure.geonames.org/findNearbyPostalCodesJSON?postalcode=${center.pincode}&country=IN&radius=10&username=irfangg&maxRows=500`)\r\n        .then(res => console.log(res?.data?.postalCodes?.map(p=>{\r\n            const {postalCode, adminName3, placeName} = p;\r\n            return {postalCode, adminName3, placeName};\r\n        })))\r\n    },[center])\r\n\r\n    const getDate = () => {\r\n        let today = new Date();\r\n        const dd = String(today.getDate()).padStart(2, '0');\r\n        const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        today = `${dd}-${mm}-${yyyy}`;\r\n        return today;\r\n    }\r\n    const onSelectState = (id) => {\r\n        const state = states.find(state => state.state_id == id);\r\n        setSelectedState(state);\r\n        setStateName(state.state_name || 'Try selecting different')\r\n        axios.get(`https://cdn-api.co-vin.in/api/v2/admin/location/districts/${state.state_id}`)\r\n        .then(response=>setDistricts(response.data.districts))\r\n    }\r\n    const onSelectDist = (id) => {\r\n        const district = districts.find(dist => dist.district_id == id);\r\n        setDistrictName(district.district_name || 'Try different')\r\n        axios.get(`https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=${district.district_id}&date=${getDate()}`)\r\n        .then(response=>{\r\n            setCenters(response.data.centers);\r\n            console.log(response.data.centers, response.data.centers.map(c => `${c.pincode}-${c.address}`))\r\n            return setPincodes(response.data.centers.map(c => {\r\n                const {pincode, address, center_id} = c;\r\n                return {pincode, address, center_id};\r\n            }\r\n            ));\r\n        })\r\n    }\r\n    const onSelectPin = (id) => {\r\n        const center = centers.find(c => c.center_id == id);\r\n        setCenter(center)\r\n    }\r\n    const CustomMenu = React.forwardRef(\r\n        ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n          const [value, setValue] = useState('');\r\n          return (\r\n            <div\r\n              ref={ref}\r\n              style={style}\r\n              className={className}\r\n              aria-labelledby={labeledBy}\r\n            >\r\n              <FormControl\r\n                autoFocus\r\n                className=\"mx-3 my-2 w-auto\"\r\n                placeholder=\"Type to filter...\"\r\n                onChange={(e) => setValue(e.target.value)}\r\n                value={value}\r\n              />\r\n              <ul className=\"list-unstyled\">\r\n                {React.Children.toArray(children).filter(\r\n                  (child) =>\r\n                    !value || child.props.children.toLowerCase().indexOf(value) !== -1, //child.props.children.toLowerCase().includes(value) || \r\n                )}\r\n              </ul>\r\n            </div>\r\n          );\r\n        },\r\n      );\r\n    return(\r\n        <Container fluid>\r\n        <Row className='mt-2'>Dashboard</Row>\r\n        <Row className='mt-2 mb-2'>\r\n            <Col xl={4} lg={4} md={4} sm={12} xs={12} className='mb-2'>\r\n            {states.length ? \r\n                <Dropdown as={ButtonGroup}>\r\n                    <Dropdown.Toggle id=\"dropdown-custom-1\">{stateName}</Dropdown.Toggle>\r\n                    <Dropdown.Menu as={CustomMenu}>\r\n                        {states.map((state, key)=>{\r\n                        return <Dropdown.Item eventKey={state.state_id} key={state.state_id} onSelect={onSelectState}>{state.state_name}</Dropdown.Item>\r\n                        })}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            : null}\r\n            </Col>\r\n            <Col xl={4} lg={4} md={4} sm={12} xs={12} className='mb-2'>\r\n            {districts.length ? \r\n                <Dropdown as={ButtonGroup}>\r\n                    <Dropdown.Toggle id=\"dropdown-custom-1\">{districtName}</Dropdown.Toggle>\r\n                    <Dropdown.Menu as={CustomMenu}>\r\n                        {districts.map((dist, key)=>{\r\n                        return <Dropdown.Item eventKey={dist.district_id} key={dist.district_id} onSelect={onSelectDist}>{dist.district_name}</Dropdown.Item>\r\n                        })}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            : null}  \r\n            </Col>\r\n            <Col xl={4} lg={4} md={4} sm={12} xs={12}>\r\n                {pincodes.length ? \r\n                <Dropdown as={ButtonGroup}>\r\n                    <Dropdown.Toggle id=\"dropdown-custom-1\">Pincode</Dropdown.Toggle>\r\n                    <Dropdown.Menu as={CustomMenu}>\r\n                        {pincodes.map((p, key)=>{\r\n                            return <Dropdown.Item eventKey={p.center_id} key={key} onSelect={onSelectPin}>{`${p.pincode}-${p.address}`}</Dropdown.Item>\r\n                        })}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n                : null}\r\n            </Col>\r\n      </Row>\r\n      {Object.keys(center).length !== 0 ?\r\n      <>\r\n    <Row className='mt-2'>\r\n        <Col xl={3} lg={3} md={6} sm={6} xs={12}>\r\n            Address: {center.address}\r\n        </Col>\r\n        <Col xl={3} lg={3} md={6} sm={6} xs={12}>\r\n            Block name: {center.block_name}\r\n        </Col>\r\n        <Col xl={3} lg={3} md={6} sm={6} xs={12}>\r\n            vaccine fee: {center.fee_type}\r\n        </Col>\r\n        <Col xl={3} lg={3} md={6} sm={6} xs={12}>Center name: {center.name}</Col>\r\n    </Row> \r\n    <Row className='mt-2'>\r\n        <Col xs={12}>\r\n        <Table responsive striped bordered hover variant=\"dark\">\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Available capacity</th>\r\n                <th>Min age limit</th>\r\n                <th>vaccine</th>\r\n                <th>slots</th>\r\n                <th>Available dose1</th>\r\n                <th>Available dose2</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {center.sessions.map((session)=>{\r\n                const {date, available_capacity, available_capacity_dose1, available_capacity_dose2,min_age_limit,\r\n                    vaccine, slots,  } = session;\r\n                return (\r\n                <tr>\r\n                    <td>{date}</td>\r\n                    <td>{available_capacity}</td>\r\n                    <td>{min_age_limit}</td>\r\n                    <td>{vaccine}</td>\r\n                    <td>{slots.map(s => <div>{s}</div>)}</td>\r\n                    <td>{available_capacity_dose1}</td>\r\n                    <td>{available_capacity_dose2}</td>\r\n                </tr>\r\n                )\r\n            })}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n    </Row>\r\n    </>\r\n    : null}\r\n    <Row>\r\n        <Col xs={12} className='mb-2'><div>Note: Map work is still in progress</div></Col>\r\n        <Col xs={12}>\r\n                <DisplayMapFC/>\r\n        </Col>\r\n    </Row>\r\n      </Container>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import logo from './logo.svg';\nimport './App.css';\nimport {Col, Container, Row, Dropdown} from 'react-bootstrap';\nimport Dashboard from './components/Dashboard'\n\nfunction App() {\n  return (\n    <Container fluid className=\"App\">\n          <Dashboard/>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}